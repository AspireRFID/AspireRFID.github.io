<?xml version="1.0" encoding="UTF-8"?>

<xwikidoc>
<web>Main.Documentation.Merge</web>
<name>Trunk</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent>Main.Documentation.Merge</parent>
<creator>xwiki:XWiki.nkef</creator>
<author>xwiki:XWiki.nkef</author>
<contentAuthor>xwiki:XWiki.nkef</contentAuthor>
<creationDate>1241426668000</creationDate>
<date>1241535135000</date>
<contentUpdateDate>1241535135000</contentUpdateDate>
<version>1.16</version>
<title>Main (Trunk)</title>
<template></template>
<attachment>
<filename>ASPIRE_D2.4_V1.4_Final.pdf</filename>
<filesize>1537280</filesize>
<author>xwiki:XWiki.nkef</author>
<date>1241510144000</date>
<version>1.1</version>
<comment></comment>
</attachment>
<content>1 Main (Trunk)

----
#toc("" "" "true")
----

*Note that modules noted in “Red” are not implemented yet*

1.1 Reader Core Proxy (Uses Licensed Fosstrak modules as Codebase)
* Implemented as an OSGi bundle that runs within Apache Felix
* Provides JMX management interface
* Provides EPC Reader Management (not currently enabled and used)
* Uses EPC Reader Protocol to communicate with ALE 
* Provides Interfaces with readers ( Implemented as an OSGi bundle):
** For Intermec(BRI)
** For FossTrack’s Simulator reader
** For Impinj (Mach1) (no OSGi implementation yet)
** HAL Wrapper for new readers
** FEIG ID ISC.LRU1000 (Ethernet, TPC/IP) (supported by Fosstrak not tested yet, no OSGi implementation yet)
** FEIG ID ISC.MR101-A (RS232/485, COM) (supported by Fosstrak not tested yet, no OSGi implementation yet)
&lt;font style="color:red"&gt;
**  TagSys Medio [L100 L200&gt;http://www.tagsysrfid.com/systems/upload/Medio-L100-200-Sep08.pdf] Interface
** Tikitag ([ACR 122&gt;http://www.nfc-reader.com/NFC-smart-card-reader/ACR122-API-Manual/API_ACR122.pdf] USB (CCID compliant))
** Bluetooth Interface
** NFC Interface
* Standardization for Reader Management (RM) based on JMX
* Authentication/Access mechanisms
&lt;/font&gt;

1.1  ALE Server (Uses Licensed Fosstrak modules as Codebase)
* EPC F&amp;C 1.1 standard compliant (not all Standards Implemented).
** Check if AspireRFID fully supports Tag Memory Specification API (Section 7 of ALE 1.1 specifications)
*** ALETM – Main API class (Section 7.1 of ALE1.1 specifications) and implement it if it doesn’t.
* Runs on Apache tomcat 6.0
* Provides Standard EPC Control Interface Based on SOAP messages
* Uses CXF and spring to implement JaxWS for the control interface.
* Supports Maven.
* Supports RP and LLRP for the communication with the readers.
* Supports TCP/HTTP protocol to deliver EC reports
&lt;font style="color:red"&gt;
* Extension ~~Model~~ for Captured sensor data from semi-passive Tags, active-Tags, Sensor Networks, actuators… (Need to propose the supported model and implement it) sensors input planed to be supported:
** Humidity
** Temperature
** Accelerometer
** GPS coordinates
* Interface for connecting/supporting Sensor Networks (e.g. Zigbee)
* Interface for connecting/supporting Active Tags 
* Middleware anti-collision solution implementation for multi-vendor RFID readers
* Partial implementation of the EPC Writing API for supporting Label generation and printing (including 1D and 2D barcodes)
* Integration of TDT to support multiple types of Tags/Barcodes
* Implemented as an OSGi bundle that can be deployed in JOnAS Application Server (not implemented yet)
* Authentication/Access mechanisms
&lt;/font&gt;


1.1 Business Event Generator
* Runs on Apache tomcat 6.0
* Uses CXF and Spring to implement JaxWS for the control interface.
* Provides TCP/HTTP interface to capture the ECReports
* Uses EPCIS Master Data Capture Client using AspireRFID MDC API Based on SOAP messages
* Uses EPCIS Capture Client using the standard EPC Control Interface Based on SOAP messages
* Uses EPCIS Query Client using the standard EPC Control Interface Based on SOAP messages
* Supports Quantity, Aggregation, Transaction and Object Events (needs to be tested)
&lt;font style="color:red"&gt;
* Interface for connecting/supporting (this feature can be implemented at the Connector also)
** Actuators
** To give feedback to various devises (e.g. Account machines, delivery Information at the gates/handheld devises …)
* Implemented as an OSGi bundle that can be deployed in JOnAS Application Server (not implemented yet)
* Authentication/Access mechanisms
&lt;/font&gt;


1.1 EPCIS (Uses Licensed Fosstrak modules as Codebase)
* EPC 1.0.1 standard compliant
** Provides Extension Mechanisms
*** For every Event the following data are supported from the repository (check Section 6.3 and 9.1 of the EPCIS specifications): 
{table}
Column Name | Type Name
event_id | BIGINT
fieldname | VARCHAR
prefix | VARCHAR
intValue | INT
floatValue | FLOAT
dateValue | TIMESTAMP
strValue | VARCHAR 
{table}

* Runs on Apache tomcat 6.0
* Provides standard EPC Query and Capture Interface Based on SOAP messages.
* Provides Query and Capture Interfaces
** Uses CXF and Spring to implement JaxWS for the standard EPC Query and Capture interface.
** Provides AspireRFID’s Master Data Capture Interface Based on SOAP messages.
** Uses CXF and Spring to implement JaxWS for the standard EPC Query and Capture interface.
** Uses SQL for the Query interface and Hibernate for the Capture interface.
* Supports MySQL 5.0 (Can Support more Databases with some modifications)
&lt;font style="color:red"&gt;
* Probably a ~~New Field~~ extensions may be required for the existing Event Types extensions in the Data Definition Layer (Useful to store e.g. GPS coordinates, Security check …). 
* Implement EPCIS Repo as an OSGi bundle that can be deployed in JOnAS Application Server
* Authentication/Access mechanisms
&lt;/font&gt;


1.1 Tooling (Eclipse)
 ASPIRE IDE has been designed as an Eclipse RCP (Rich Client Platform) application that will run over Equinox OSGI server. It uses the command API to define menus, pop-up menu items and toolbars so as to support easily plug-ins and provide more control. Every tool will be an eclipse plug-in/bundle that will be able to be installed or removed as needed.
* AspireRfidIDE Core (required for the other plug-ins to run)
* ALE Server Configurator Plug-in 
* Business Event Generator Plug-in 
* Physical Reader Configuration &amp; Management Plug-in 
* EC-Spec Editor Plug-in 
* LR-Spec Editor Plug-in 
* Master Data Editor Plug-in 
&lt;font style="color:red"&gt;
* Business Process Management and Workflow Editor Plug-in
** Possible candidates to use as codebase:
*** Eclipse JWT Workflow Editor
*** OW2 Bonita 
*** OW2 Enhydra JaWE
* Connector Configurator Plug-in
* Business Location Designer. Will be used to “build” the company (Master Data: Business Location) using a design editor.
* ASPIRE Programmability Engine Plug-in. Will be used to translate the AspireRFID specification Language prodused from the BPMWE Plug-in to the AspireRFID middleware.
* End-to-End management for all the AspireRFID middleware’s modules
** Probably use Jasmine (eclipse plug-in) as codebase (note: should find appropriate open source JMX enabled plug-in as codebase)
* Concurrent innovation engineering framework
* Authentication/Access mechanisms for the AspireRFID IDE
&lt;/font&gt;

1.1 Connector
* Runs on Apache tomcat 6.0
* Uses CXF and Spring to implement JaxWS for the control interface.
* Uses EPCIS Query Client using the standard EPC Control Interface Based on SOAP messages.
&lt;font style="color:red"&gt;
* ERP/WMS Support:
** Singular Logic’s [Enterprise ERP&gt;http://www.singularlogic.eu/index.php?Itemid=194&amp;id=152&amp;option=com_content&amp;task=view]
** Microsoft’s Dynamics NAV
** MyWMS
** UJF’s Object tracking
** UJF’s Supply chain management
** UJF’s Sonding Balloon tracking
* Implemented as an OSGi bundle that can be deployed in JOnAS Application Server (not implemented yet)
* Authentication/Access mechanisms
&lt;/font&gt;

1.1 ONS
* Under Construction

1.1 TDT (Uses Fosstrak Library for EPC TDT)
{table}
Tag Data Standards | Supported
 *Bar Code Tags (GS1 System)* | Yes
EAN/UPC | Yes
ITF-14 | Yes
GS1 DataMatrix | Yes
GS1 DAtaBar | Yes
GS1-128 | Yes
*EPC Global Tags* | Yes (Using Fosstrak)
SSCC | Yes
GTIN | Yes
GTIN | Yes
GLN | Yes
GRAI | Yes
GIAI | Yes
GLN | Yes
*ISO Tags* | To be supported
14443 | To be supported
15693 | To be supported
15962 | To be supported
*uCode Tags* | To be supported
{table}

1.1 Applications and Demos

* Simple F&amp;C Test
* Warehouse Packet Delivery (3 Tier Use)	
* AIT’s Warehouse Packet Delivery (6 Tier Use)
&lt;font style="color:red"&gt;
* UJF’s Object tracking (Connector Interface should be build to be supported)
* UJF’s Supply chain management (Connector Interface should be build to be supported)
* UJF’s Sonding Balloon tracking (Connector Interface should be build to be supported)
* Demo Packs for all available demos and Middleware modules.
&lt;/font&gt;
</content>
<renderedcontent>&lt;h2 class="heading-1"&gt;&lt;span id="HMain28Trunk29"&gt;Main (Trunk)&lt;/span&gt;&lt;/h2&gt;&lt;p class="paragraph"/&gt;&lt;hr class="line"/&gt;
            &lt;ul&gt;
          &lt;li&gt;&lt;a href="#HReaderCoreProxy28UsesLicensedFosstrakmodulesasCodebase29"&gt;1 Reader Core Proxy (Uses Licensed Fosstrak modules as Codebase)&lt;/a&gt; 
      &lt;li&gt;&lt;a href="#HALEServer28UsesLicensedFosstrakmodulesasCodebase29"&gt;2 ALE Server (Uses Licensed Fosstrak modules as Codebase)&lt;/a&gt; 
      &lt;li&gt;&lt;a href="#HBusinessEventGenerator"&gt;3 Business Event Generator&lt;/a&gt; 
      &lt;li&gt;&lt;a href="#HEPCIS28UsesLicensedFosstrakmodulesasCodebase29"&gt;4 EPCIS (Uses Licensed Fosstrak modules as Codebase)&lt;/a&gt; 
      &lt;li&gt;&lt;a href="#HTooling28Eclipse29"&gt;5 Tooling (Eclipse)&lt;/a&gt; 
      &lt;li&gt;&lt;a href="#HConnector"&gt;6 Connector&lt;/a&gt; 
      &lt;li&gt;&lt;a href="#HONS"&gt;7 ONS&lt;/a&gt; 
      &lt;li&gt;&lt;a href="#HTDT28UsesFosstrakLibraryforEPCTDT29"&gt;8 TDT (Uses Fosstrak Library for EPC TDT)&lt;/a&gt; 
      &lt;li&gt;&lt;a href="#HApplicationsandDemos"&gt;9 Applications and Demos&lt;/a&gt; 
      &lt;/ul&gt; &lt;hr class="line"/&gt;&lt;p class="paragraph"/&gt;&lt;strong class="strong"&gt;Note that modules noted in “Red” are not implemented yet&lt;/strong&gt;
&lt;h3 class="heading-1-1"&gt;&lt;span id="HReaderCoreProxy28UsesLicensedFosstrakmodulesasCodebase29"&gt;Reader Core Proxy (Uses Licensed Fosstrak modules as Codebase)&lt;/span&gt;&lt;/h3&gt; 
&lt;ul class="star"&gt;
&lt;li&gt;Implemented as an OSGi bundle that runs within Apache Felix&lt;/li&gt;
&lt;li&gt;Provides JMX management interface&lt;/li&gt;
&lt;li&gt;Provides EPC Reader Management (not currently enabled and used)&lt;/li&gt;
&lt;li&gt;Uses EPC Reader Protocol to communicate with ALE&lt;/li&gt;
&lt;li&gt;Provides Interfaces with readers ( Implemented as an OSGi bundle):&lt;ul class="star"&gt;
&lt;li&gt;For Intermec(BRI)&lt;/li&gt;
&lt;li&gt;For FossTrack’s Simulator reader&lt;/li&gt;
&lt;li&gt;For Impinj (Mach1) (no OSGi implementation yet)&lt;/li&gt;
&lt;li&gt;HAL Wrapper for new readers&lt;/li&gt;
&lt;li&gt;FEIG ID ISC.LRU1000 (Ethernet, TPC/IP) (supported by Fosstrak not tested yet, no OSGi implementation yet)&lt;/li&gt;
&lt;li&gt;FEIG ID ISC.MR101-A (RS232/485, COM) (supported by Fosstrak not tested yet, no OSGi implementation yet)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;font style="color:red"&gt;
&lt;ul class="star"&gt;
&lt;li class="innerlist"&gt;&lt;ul class="star"&gt;
&lt;li&gt; TagSys Medio &lt;span class="wikiexternallink"&gt;&lt;a href="http://www.tagsysrfid.com/systems/upload/Medio-L100-200-Sep08.pdf"&gt;&amp;#76;100 L200&lt;/a&gt;&lt;/span&gt; Interface&lt;/li&gt;
&lt;li&gt;Tikitag (&lt;span class="wikiexternallink"&gt;&lt;a href="http://www.nfc-reader.com/NFC-smart-card-reader/ACR122-API-Manual/API_ACR122.pdf"&gt;&amp;#65;CR 122&lt;/a&gt;&lt;/span&gt; USB (CCID compliant))&lt;/li&gt;
&lt;li&gt;Bluetooth Interface&lt;/li&gt;
&lt;li&gt;NFC Interface&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Standardization for Reader Management (RM) based on JMX&lt;/li&gt;
&lt;li&gt;Authentication/Access mechanisms&lt;/li&gt;
&lt;/ul&gt;&lt;/font&gt;
&lt;h3 class="heading-1-1"&gt;&lt;span id="HALEServer28UsesLicensedFosstrakmodulesasCodebase29"&gt;ALE Server (Uses Licensed Fosstrak modules as Codebase)&lt;/span&gt;&lt;/h3&gt; 
&lt;ul class="star"&gt;
&lt;li&gt;EPC F&amp;C 1.1 standard compliant (not all Standards Implemented).&lt;ul class="star"&gt;
&lt;li&gt;Check if AspireRFID fully supports Tag Memory Specification API (Section 7 of ALE 1.1 specifications)&lt;ul class="star"&gt;
&lt;li&gt;ALETM – Main API class (Section 7.1 of ALE1.1 specifications) and implement it if it doesn’t.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Runs on Apache tomcat 6.0&lt;/li&gt;
&lt;li&gt;Provides Standard EPC Control Interface Based on SOAP messages&lt;/li&gt;
&lt;li&gt;Uses CXF and spring to implement JaxWS for the control interface.&lt;/li&gt;
&lt;li&gt;Supports Maven.&lt;/li&gt;
&lt;li&gt;Supports RP and LLRP for the communication with the readers.&lt;/li&gt;
&lt;li&gt;Supports TCP/HTTP protocol to deliver EC reports&lt;/li&gt;
&lt;/ul&gt;&lt;font style="color:red"&gt;
&lt;ul class="star"&gt;
&lt;li&gt;Extension &lt;i class="italic"&gt;Model&lt;/i&gt; for Captured sensor data from semi-passive Tags, active-Tags, Sensor Networks, actuators… (Need to propose the supported model and implement it) sensors input planed to be supported:&lt;ul class="star"&gt;
&lt;li&gt;Humidity&lt;/li&gt;
&lt;li&gt;Temperature&lt;/li&gt;
&lt;li&gt;Accelerometer&lt;/li&gt;
&lt;li&gt;GPS coordinates&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Interface for connecting/supporting Sensor Networks (e.g. Zigbee)&lt;/li&gt;
&lt;li&gt;Interface for connecting/supporting Active Tags&lt;/li&gt;
&lt;li&gt;Middleware anti-collision solution implementation for multi-vendor RFID readers&lt;/li&gt;
&lt;li&gt;Partial implementation of the EPC Writing API for supporting Label generation and printing (including 1D and 2D barcodes)&lt;/li&gt;
&lt;li&gt;Integration of TDT to support multiple types of Tags/Barcodes&lt;/li&gt;
&lt;li&gt;Implemented as an OSGi bundle that can be deployed in JOnAS Application Server (not implemented yet)&lt;/li&gt;
&lt;li&gt;Authentication/Access mechanisms&lt;/li&gt;
&lt;/ul&gt;&lt;/font&gt;
&lt;h3 class="heading-1-1"&gt;&lt;span id="HBusinessEventGenerator"&gt;Business Event Generator&lt;/span&gt;&lt;/h3&gt; 
&lt;ul class="star"&gt;
&lt;li&gt;Runs on Apache tomcat 6.0&lt;/li&gt;
&lt;li&gt;Uses CXF and Spring to implement JaxWS for the control interface.&lt;/li&gt;
&lt;li&gt;Provides TCP/HTTP interface to capture the ECReports&lt;/li&gt;
&lt;li&gt;Uses EPCIS Master Data Capture Client using AspireRFID MDC API Based on SOAP messages&lt;/li&gt;
&lt;li&gt;Uses EPCIS Capture Client using the standard EPC Control Interface Based on SOAP messages&lt;/li&gt;
&lt;li&gt;Uses EPCIS Query Client using the standard EPC Control Interface Based on SOAP messages&lt;/li&gt;
&lt;li&gt;Supports Quantity, Aggregation, Transaction and Object Events (needs to be tested)&lt;/li&gt;
&lt;/ul&gt;&lt;font style="color:red"&gt;
&lt;ul class="star"&gt;
&lt;li&gt;Interface for connecting/supporting (this feature can be implemented at the Connector also)&lt;ul class="star"&gt;
&lt;li&gt;Actuators&lt;/li&gt;
&lt;li&gt;To give feedback to various devises (e.g. Account machines, delivery Information at the gates/handheld devises …)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Implemented as an OSGi bundle that can be deployed in JOnAS Application Server (not implemented yet)&lt;/li&gt;
&lt;li&gt;Authentication/Access mechanisms&lt;/li&gt;
&lt;/ul&gt;&lt;/font&gt;
&lt;h3 class="heading-1-1"&gt;&lt;span id="HEPCIS28UsesLicensedFosstrakmodulesasCodebase29"&gt;EPCIS (Uses Licensed Fosstrak modules as Codebase)&lt;/span&gt;&lt;/h3&gt; 
&lt;ul class="star"&gt;
&lt;li&gt;EPC 1.0.1 standard compliant&lt;ul class="star"&gt;
&lt;li&gt;Provides Extension Mechanisms&lt;ul class="star"&gt;
&lt;li&gt;For every Event the following data are supported from the repository (check Section 6.3 and 9.1 of the EPCIS specifications):&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;table class="wiki-table" cellpadding="0" cellspacing="0" border="0"&gt;&lt;tr&gt;&lt;th&gt;Column Name&lt;/th&gt;&lt;th&gt;Type Name&lt;/th&gt;&lt;/tr&gt;&lt;tr class="table-odd"&gt;&lt;td&gt;event_id&lt;/td&gt;&lt;td&gt;BIGINT&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-even"&gt;&lt;td&gt;fieldname&lt;/td&gt;&lt;td&gt;VARCHAR&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-odd"&gt;&lt;td&gt;prefix&lt;/td&gt;&lt;td&gt;VARCHAR&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-even"&gt;&lt;td&gt;intValue&lt;/td&gt;&lt;td&gt;INT&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-odd"&gt;&lt;td&gt;floatValue&lt;/td&gt;&lt;td&gt;FLOAT&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-even"&gt;&lt;td&gt;dateValue&lt;/td&gt;&lt;td&gt;TIMESTAMP&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-odd"&gt;&lt;td&gt;strValue&lt;/td&gt;&lt;td&gt;VARCHAR&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;ul class="star"&gt;
&lt;li&gt;Runs on Apache tomcat 6.0&lt;/li&gt;
&lt;li&gt;Provides standard EPC Query and Capture Interface Based on SOAP messages.&lt;/li&gt;
&lt;li&gt;Provides Query and Capture Interfaces&lt;ul class="star"&gt;
&lt;li&gt;Uses CXF and Spring to implement JaxWS for the standard EPC Query and Capture interface.&lt;/li&gt;
&lt;li&gt;Provides AspireRFID’s Master Data Capture Interface Based on SOAP messages.&lt;/li&gt;
&lt;li&gt;Uses CXF and Spring to implement JaxWS for the standard EPC Query and Capture interface.&lt;/li&gt;
&lt;li&gt;Uses SQL for the Query interface and Hibernate for the Capture interface.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Supports MySQL 5.0 (Can Support more Databases with some modifications)&lt;/li&gt;
&lt;/ul&gt;&lt;font style="color:red"&gt;
&lt;ul class="star"&gt;
&lt;li&gt;Probably a &lt;i class="italic"&gt;New Field&lt;/i&gt; extensions may be required for the existing Event Types extensions in the Data Definition Layer (Useful to store e.g. GPS coordinates, Security check …).&lt;/li&gt;
&lt;li&gt;Implement EPCIS Repo as an OSGi bundle that can be deployed in JOnAS Application Server&lt;/li&gt;
&lt;li&gt;Authentication/Access mechanisms&lt;/li&gt;
&lt;/ul&gt;&lt;/font&gt;
&lt;h3 class="heading-1-1"&gt;&lt;span id="HTooling28Eclipse29"&gt;Tooling (Eclipse)&lt;/span&gt;&lt;/h3&gt; 
 ASPIRE IDE has been designed as an Eclipse RCP (Rich Client Platform) application that will run over Equinox OSGI server. It uses the command API to define menus, pop-up menu items and toolbars so as to support easily plug-ins and provide more control. Every tool will be an eclipse plug-in/bundle that will be able to be installed or removed as needed.
&lt;ul class="star"&gt;
&lt;li&gt;AspireRfidIDE Core (required for the other plug-ins to run)&lt;/li&gt;
&lt;li&gt;ALE Server Configurator Plug-in&lt;/li&gt;
&lt;li&gt;Business Event Generator Plug-in&lt;/li&gt;
&lt;li&gt;Physical Reader Configuration &amp; Management Plug-in&lt;/li&gt;
&lt;li&gt;EC-Spec Editor Plug-in&lt;/li&gt;
&lt;li&gt;LR-Spec Editor Plug-in&lt;/li&gt;
&lt;li&gt;Master Data Editor Plug-in&lt;/li&gt;
&lt;/ul&gt;&lt;font style="color:red"&gt;
&lt;ul class="star"&gt;
&lt;li&gt;Business Process Management and Workflow Editor Plug-in&lt;ul class="star"&gt;
&lt;li&gt;Possible candidates to use as codebase:&lt;ul class="star"&gt;
&lt;li&gt;Eclipse JWT Workflow Editor&lt;/li&gt;
&lt;li&gt;OW2 Bonita&lt;/li&gt;
&lt;li&gt;OW2 Enhydra JaWE&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Connector Configurator Plug-in&lt;/li&gt;
&lt;li&gt;Business Location Designer. Will be used to “build” the company (Master Data: Business Location) using a design editor.&lt;/li&gt;
&lt;li&gt;ASPIRE Programmability Engine Plug-in. Will be used to translate the AspireRFID specification Language prodused from the BPMWE Plug-in to the AspireRFID middleware.&lt;/li&gt;
&lt;li&gt;End-to-End management for all the AspireRFID middleware’s modules&lt;ul class="star"&gt;
&lt;li&gt;Probably use Jasmine (eclipse plug-in) as codebase (note: should find appropriate open source JMX enabled plug-in as codebase)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Concurrent innovation engineering framework&lt;/li&gt;
&lt;li&gt;Authentication/Access mechanisms for the AspireRFID IDE&lt;/li&gt;
&lt;/ul&gt;&lt;/font&gt;
&lt;h3 class="heading-1-1"&gt;&lt;span id="HConnector"&gt;Connector&lt;/span&gt;&lt;/h3&gt; 
&lt;ul class="star"&gt;
&lt;li&gt;Runs on Apache tomcat 6.0&lt;/li&gt;
&lt;li&gt;Uses CXF and Spring to implement JaxWS for the control interface.&lt;/li&gt;
&lt;li&gt;Uses EPCIS Query Client using the standard EPC Control Interface Based on SOAP messages.&lt;/li&gt;
&lt;/ul&gt;&lt;font style="color:red"&gt;
&lt;ul class="star"&gt;
&lt;li&gt;ERP/WMS Support:&lt;ul class="star"&gt;
&lt;li&gt;Singular Logic’s &lt;span class="wikiexternallink"&gt;&lt;a href="http://www.singularlogic.eu/index.php?Itemid=194&amp;id=152&amp;option=com_content&amp;task=view"&gt;&amp;#69;nterprise ERP&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Microsoft’s Dynamics NAV&lt;/li&gt;
&lt;li&gt;MyWMS&lt;/li&gt;
&lt;li&gt;UJF’s Object tracking&lt;/li&gt;
&lt;li&gt;UJF’s Supply chain management&lt;/li&gt;
&lt;li&gt;UJF’s Sonding Balloon tracking&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Implemented as an OSGi bundle that can be deployed in JOnAS Application Server (not implemented yet)&lt;/li&gt;
&lt;li&gt;Authentication/Access mechanisms&lt;/li&gt;
&lt;/ul&gt;&lt;/font&gt;
&lt;h3 class="heading-1-1"&gt;&lt;span id="HONS"&gt;ONS&lt;/span&gt;&lt;/h3&gt; 
&lt;ul class="star"&gt;
&lt;li&gt;Under Construction&lt;/li&gt;
&lt;/ul&gt;&lt;h3 class="heading-1-1"&gt;&lt;span id="HTDT28UsesFosstrakLibraryforEPCTDT29"&gt;TDT (Uses Fosstrak Library for EPC TDT)&lt;/span&gt;&lt;/h3&gt; 
&lt;table class="wiki-table" cellpadding="0" cellspacing="0" border="0"&gt;&lt;tr&gt;&lt;th&gt;Tag Data Standards&lt;/th&gt;&lt;th&gt;Supported&lt;/th&gt;&lt;/tr&gt;&lt;tr class="table-odd"&gt;&lt;td&gt;&lt;strong class="strong"&gt;Bar Code Tags (GS1 System)&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-even"&gt;&lt;td&gt;EAN/UPC&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-odd"&gt;&lt;td&gt;ITF-14&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-even"&gt;&lt;td&gt;GS1 DataMatrix&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-odd"&gt;&lt;td&gt;GS1 DAtaBar&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-even"&gt;&lt;td&gt;GS1-128&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-odd"&gt;&lt;td&gt;&lt;strong class="strong"&gt;EPC Global Tags&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Yes (Using Fosstrak)&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-even"&gt;&lt;td&gt;SSCC&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-odd"&gt;&lt;td&gt;GTIN&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-even"&gt;&lt;td&gt;GTIN&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-odd"&gt;&lt;td&gt;GLN&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-even"&gt;&lt;td&gt;GRAI&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-odd"&gt;&lt;td&gt;GIAI&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-even"&gt;&lt;td&gt;GLN&lt;/td&gt;&lt;td&gt;Yes&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-odd"&gt;&lt;td&gt;&lt;strong class="strong"&gt;ISO Tags&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;To be supported&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-even"&gt;&lt;td&gt;14443&lt;/td&gt;&lt;td&gt;To be supported&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-odd"&gt;&lt;td&gt;15693&lt;/td&gt;&lt;td&gt;To be supported&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-even"&gt;&lt;td&gt;15962&lt;/td&gt;&lt;td&gt;To be supported&lt;/td&gt;&lt;/tr&gt;&lt;tr class="table-odd"&gt;&lt;td&gt;&lt;strong class="strong"&gt;uCode Tags&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;To be supported&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;h3 class="heading-1-1"&gt;&lt;span id="HApplicationsandDemos"&gt;Applications and Demos&lt;/span&gt;&lt;/h3&gt; 
&lt;ul class="star"&gt;
&lt;li&gt;Simple F&amp;C Test&lt;/li&gt;
&lt;li&gt;Warehouse Packet Delivery (3 Tier Use)&lt;/li&gt;
&lt;li&gt;AIT’s Warehouse Packet Delivery (6 Tier Use)&lt;/li&gt;
&lt;/ul&gt;&lt;font style="color:red"&gt;
&lt;ul class="star"&gt;
&lt;li&gt;UJF’s Object tracking (Connector Interface should be build to be supported)&lt;/li&gt;
&lt;li&gt;UJF’s Supply chain management (Connector Interface should be build to be supported)&lt;/li&gt;
&lt;li&gt;UJF’s Sonding Balloon tracking (Connector Interface should be build to be supported)&lt;/li&gt;
&lt;li&gt;Demo Packs for all available demos and Middleware modules.&lt;/li&gt;
&lt;/ul&gt;&lt;/font&gt;
</renderedcontent>
</xwikidoc>