###
###    Separator
###
### Insert a span containing a |
###
#macro (sep)
<span class="separator"> | </span>
#end

###
###    useravatar
###
### Display the avatar of a user, or a standard image if the user has no avatar
###
### @param username The name of the user whose avatar will be displayed
###
#macro(useravatar $username)
  #if(!$picturelist)
    #set($picturelist = $xwiki.hashMap)
  #end
  #if(!$picturelist.containsKey($username))
    #set($picture = "<img src='")
    #set($picture = $picture.concat($xwiki.getSkinFile("noavatar.png")))
    #set($picture = $picture.concat("' alt='$username' title='$username'/>"))
    #set($profiledoc = $xwiki.getDocument($username))
    #if(!$profiledoc.isNew())
      #set($profileobj = $profiledoc.getObject("XWikiUsers", 0))
      #if($profiledoc.attachmentList.size() != 0)
        #set($hasavatar = 0)
        #if($profileobj.avatar && $profileobj.avatar != "")
          #foreach ($attach in $profiledoc.attachmentList)
            #if($attach.filename == $profileobj.avatar)
              #set($hasavatar = 1)
            #end
          #end
        #end
        #if($hasavatar == 1)
          #set($pictureurl = $profiledoc.getAttachmentURL($profileobj.avatar))
          #set($picture = "<img src='")
          #set($picture = $picture.concat($pictureurl))
          #set($picture = $picture.concat("' alt='"))
          #set($picture = $picture.concat($username))
          #set($picture = $picture.concat("' title='"))
          #set($picture = $picture.concat($username))
          #set($picture = $picture.concat("'/>"))
        #end
      #end
    #end
    $!picturelist.put($username, $picture)
  #end
  $picturelist.get($username)
#end

###
###    mimetypeimg
###
### Display an icon according to the mimetype
###
### @param mime The reported mimetype of the file
### @param fname The name of the file
###
#macro(mimetypeimg $mime $fname)
#set($idx = $fname.lastIndexOf("."))
#set($idx = $idx + 1)
#if(($idx != 0) && ($idx != -1))
#set($ext = $fname.substring($idx))
#else
#set($ext = "")
#end
#####    images
#if($mime.equals("image/svg"))
<img src="$xwiki.getSkinFile("mimetypes/vectorgfx.png")" alt="[svg]" title="[svg]"/>#elseif($mime.equals("application/svg+xml"))
<img src="$xwiki.getSkinFile("mimetypes/vectorgfx.png")" alt="[svg]" title="[svg]"/>#elseif($mime.startsWith("image/"))
<img src="$xwiki.getSkinFile("mimetypes/jpg.png")" alt="[img]" title="[img]"/>#####    text based
#elseif($mime.equals("text/plain"))
<img src="$xwiki.getSkinFile("mimetypes/txt.png")" alt="[text]" title="[text]"/>#elseif($mime.equals("text/html"))
<img src="$xwiki.getSkinFile("mimetypes/html.png")" alt="[html]" title="[html]"/>#elseif($mime.equals("text/css"))
<img src="$xwiki.getSkinFile("mimetypes/url.png")" alt="[css]" title="[css]"/>#elseif($mime.startsWith("text/"))
<img src="$xwiki.getSkinFile("mimetypes/txt.png")" alt="[text]" title="[text]"/>#####    documents
#elseif($mime.equals("application/xml"))
<img src="$xwiki.getSkinFile("mimetypes/xml.png")" alt="[xml]" title="[xml]"/>#elseif($mime.equals("application/pdf"))
<img src="$xwiki.getSkinFile("mimetypes/pdf.png")" alt="[pdf]" title="[pdf]"/>#elseif($mime.equals("application/postscript"))
<img src="$xwiki.getSkinFile("mimetypes/ps.png")" alt="[ps]" title="[ps]"/>#elseif($mime.equals("application/msword"))
<img src="$xwiki.getSkinFile("mimetypes/word.png")" alt="[doc]" title="[doc]"/>#elseif($mime.equals("application/powerpoint"))
<img src="$xwiki.getSkinFile("mimetypes/ppt.png")" alt="[ppt]" title="[ppt]"/>#elseif($mime.equals("application/x-shockwave-flash"))
<img src="$xwiki.getSkinFile("mimetypes/swf.png")" alt="[swf]" title="[swf]"/>#####    archives
#elseif($mime.equals("application/x-tar"))
<img src="$xwiki.getSkinFile("mimetypes/tar.png")" alt="[tar]" title="[tar]"/>#elseif($mime.equals("application/zip"))
<img src="$xwiki.getSkinFile("mimetypes/zip1.png")" alt="[zip]" title="[zip]"/>#elseif($mime.equals("application/x-gzip"))
<img src="$xwiki.getSkinFile("mimetypes/tar_gz.png")" alt="[gz]" title="[gz]"/>#elseif($mime.equals("application/java-archive"))
<img src="$xwiki.getSkinFile("mimetypes/jar.png")" alt="[jar]" title="[jar]"/>#####    media
#elseif($mime.startsWith("audio/"))
<img src="$xwiki.getSkinFile("mimetypes/wav.png")" alt="[audio]" title="[audio]"/>#elseif($mime.startsWith("video/"))
<img src="$xwiki.getSkinFile("mimetypes/video.png")" alt="[video]" title="[video]"/>#####    octet-streams extensions
#elseif($mime.equals("application/octet-stream"))
#if($ext.equals("xls"))
<img src="$xwiki.getSkinFile("mimetypes/excel.png")" alt="[xls]" title="[xls]"/>#elseif($ext.equals("bz") || $ext.equals("bz2") || $ext.equals("tbz"))
<img src="$xwiki.getSkinFile("mimetypes/tar_bz.png")" alt="[bz]" title="[bz]"/>#elseif($ext.equals("tgz"))
<img src="$xwiki.getSkinFile("mimetypes/tar_gz.png")" alt="[gz]" title="[gz]"/>#elseif($ext.equals("rar"))
<img src="$xwiki.getSkinFile("mimetypes/zip1.png")" alt="[rar]" title="[rar]"/>#elseif($ext.equals("odp") || $ext.equals("odt") || $ext.equals("odf") || $ext.equals("sxw") || $ext.equals("stw"))
<img src="$xwiki.getSkinFile("mimetypes/openoffice.png")" alt="[odf]" title="[odf]"/>#else
<img src="$xwiki.getSkinFile("mimetypes/bin.png")" alt="[bin]" title="[bin]"/>#end
#elseif($mime.startsWith("application/"))
<img src="$xwiki.getSkinFile("mimetypes/exec.png")" alt="[app]" title="[app]"/>#end
#end

###
###    packName
###
### Display a shorter version of a string
###
### @param name The processed string
###
#macro(packName $name)
#if(!$maxnamelength)
#set($maxnamelength = 25)
#end
#set($idx = $name.lastIndexOf("."))
#if(($idx != 0) && ($idx != -1))
#set($ext = $name.substring($idx))
#else
#set($ext = "")
#set($idx = $name.length())
#end
#set($fname = $name.substring(0, $idx))
#if($fname.length() > $maxnamelength)$fname.substring(0, $maxnamelength)~$ext#else$name#end
#end

###
###    Panel header
###
### Generate the starting html code for a panel
###
### @param title The panel caption title
###
#macro(panelheader $title)
<div class="panel expanded">
<h5 class="xwikipaneltitle" onclick="togglePanelVisibility(this.parentNode);">$title</h5>##<span class="xwikipanelarrow" onclick="alert(5);">&nbsp;</span>
<div class="xwikipanelcontents">
#end
#macro(largepanelheader $title)
<div class="large panel expanded">
<h5 class="xwikipaneltitle" onclick="togglePanelVisibility(this.parentNode);">$title</h5>##<span class="xwikipanelarrow" onclick="alert(5);">&nbsp;</span>
<div class="xwikipanelcontents">
#end

###
###    Panel footer
###
### Generate the ending html code for a panel
###
#macro(panelfooter)
</div>
</div>
#end

###
###    Toplevel Menu entry with subitems
###
### Generate a menu entry and start the subitem section
###
### @param actionurl The URL this entry points to
### @param linktext The menu item text
###
#macro(xwikitopmenuentrystart $actionurl $linktext)
<div class="topmenuentry" onmouseover="showsubmenu(this);" onmouseout="hidesubmenu(this);"><a href="$actionurl"><strong>$linktext</strong></a><span class="hidden menucolon">: </span><span class="submenu hidden">
#end

###
###    Toplevel Menu entry without subitems
###
### Generate a menu entry withut subitems
###
### @param actionurl The URL this entry points to
### @param linktext The menu item text
###
#macro(xwikitopmenuentry $actionurl $linktext)
<div class="topmenuentry"><a href="$actionurl"><strong>$linktext</strong></a></div>
#end

###
###    Menu subitem entry
###
### Generate a submenu entry
###
### @param actionurl The URL this entry points to
### @param linktext The menu item text
###
#macro(submenuitem $actionurl $linktext) 
<span class="submenuitem"><a href="$actionurl">$linktext</a></span>
#end

###
###    Toplevel Menu entry end
###
### End the subitem section
###
#macro(xwikitopmenuentryend)
</span></div>
#end

#macro(xwikimessageboxstart $title $message)
    <div class="centered">
    <fieldset class="xwikimessage">
      <legend>$title</legend>
      <p class="xwikimessage">$message</p>
#end
#macro(xwikimessageboxend)
    </fieldset>
    </div>
#end

#macro(xwikimessagebox $title $message $urlyes $urlno $msgyes $msgno)
#xwikimessageboxstart($title $message)
      <div class="buttons"><a href="$urlyes"><input type="button" class="button" value="$msgyes" onclick="location='$urlyes'; return false;"/></a><a href="$urlno"><input type="button" class="button" value="$msgno" onclick="location='$urlno'; return false;"/></a></div>
#xwikimessageboxend()
#end

#macro(xwikimessageboxfield $fielddoc $fieldname $fieldtext $html)
<div class="xmblabel">$fieldtext</div>
<div class="xmbfield">
#if($fieldname!="")
$fielddoc.display($fieldname, "edit")
#end
#if($html!="")
$html
#end
</div>
#end

#macro(xwikimessageboxsubmit $submittext)
<div class="xmbbutton">
<input type="submit" value="$submittext" />
</div>
#end

#macro(csscolorproperty $csspropname $fieldname)
#set($objcolor = $colors.get($fieldname))
#if($objcolor && $objcolor != "")
  $csspropname: $objcolor;
#end
#end

#macro(csscolorpropertyimportant $csspropname $fieldname)
#set($objcolor = $colors.get($fieldname))
#if($objcolor && $objcolor != "")
  $csspropname: $objcolor !important;
#end
#end
